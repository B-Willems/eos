/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "XBram.h"
#include "sleep.h"

int max_x = 64;
u32 present[64];
int numb_pixels = 64;

void load_ram()
{
	int ram_addr = 0x4;
	ram_addr = 0x4;
	for (int m = 0; m < max_x; m++)
	{
			ram_addr = (m*4)+4;
			XBram_WriteReg(XPAR_AXI_BRAM_CTRL_0_S_AXI_BASEADDR, ram_addr, present[m]);//present[l][m]);
	}
	//enable the data
   XBram_WriteReg(XPAR_AXI_BRAM_CTRL_0_S_AXI_BASEADDR, 0, (u32)numb_pixels);
}

void rotate()
{
	u32 tempData;
	int x;
	for( x = max_x-1; x> 0; x--){

		if (x == max_x-1) {
			tempData = present[max_x-1];
			//present[max_x-1] = 0x0;
		}

		present[x] = present[x-1];
		present[0] = tempData;

		//present[x] = 0x00000000;

		load_ram();
		printf("iteration %d\n\r",x);
	}
	usleep(100000);

}

void move()
{
	u32 tempData;
	int x;
	for( x = 0; x< (max_x-1); x++){
		tempData = present[max_x-1];
		if (tempData != 0) {
			present[0] = tempData;
			present[max_x-1] = 0x0;
		}
		present[x+1] = present[x];
		present[x] = 0x00000000;

		load_ram();
		usleep(500000);
		printf("iteration %d\n\r",x);
	}
}

int main()
{
    init_platform();

    load_ram();
    rotate();
    move();

    cleanup_platform();
    return 0;
}
